"""
–†–µ–∂–∏–º —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ä–æ–∑–Ω–∏—Ü—ã

–û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏
"""

# -------------------------------- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏
import asyncio
# -------------------------------- –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from aiogram import types, Router, F
from aiogram.filters import CommandStart, Command, StateFilter, or_f
from aiogram.client.default import DefaultBotProperties  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π

from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
# -------------------------------- –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
from handlers.text_message import *  # –°–ø–∏—Å–æ–∫ —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤:
from filters.chats_filters import *

# from aiogram.utils.formatting import as_list, as_marked_section, Bold, Italic

from menu import keyboard_menu  # –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–Ω–∏–∑—É
from menu.inline_menu import *  # –ö–Ω–æ–ø–∫–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –º–µ–Ω—é - –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π

from menu.button_generator import get_keyboard

from working_databases.orm_query_builder import *
from handlers.data_preparation import *


# ----------------------------------------------------------------------------------------------------------------------
# –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è —á–∞—Ç–∞ –ø–æ–¥ —Ä–æ–∑–Ω–∏—Ü—É:
retail_router = Router()

# –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ:
# 1-–π —Ñ–∏–ª—å—Ç—Ä: —á–∞—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å ‚Äú–ø—Ä–∏–≤–∞—Ç–Ω—ã–º‚Äù, ‚Äù–≥—Ä—É–ø–ø–æ–≤—ã–º‚Äú, ‚Äù—Å—É–ø–µ—Ä –≥—Ä—É–ø–ø–æ–≤—ã–º‚Äú –∏–ª–∏ "–∫–∞–Ω–∞–ª–æ–º‚Äù - > \
#  ( ‚Äúprivate‚Äù, ‚Äúgroup‚Äù, ‚Äúsupergroup‚Äù, ‚Äúchannel‚Äù)
# 2-–π —Ñ–∏–ª—å—Ç—Ä: –ø–æ —Ç–∏–ø—É —é–∑–µ—Ä–æ–≤ (—Ç–∏–ø —Å–µ—Å—Å–∏–∏).

retail_router.message.filter(ChatTypeFilter(['private']), TypeSessionFilter(allowed_types=['oait']))  # retail oait
retail_router.edited_message.filter(ChatTypeFilter(['private']), TypeSessionFilter(allowed_types=['oait']))


# ----------------------------------------------------------------------------------------------------------------------
# ---------------------------------- –ö–æ–¥ –Ω–∏–∂–µ –¥–ª—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π (FSM)
class AddRequests(StatesGroup):
    """–®–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏–π"""
    request_message = State()
    # documents = State()


#
# texts = {
#     'AddRequests:request_message': '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ:'
#     # + –ï–©–ï
# }

class Instructor(StatesGroup):
    """–®–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –∏ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ:"""
    # –®–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π:
    instruct_or_gowork = State()


class SetCategory(StatesGroup):
    """
    –®–∞–≥–∏ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    –í—ã–±–∏—Ä–∞–µ–º —Å–Ω–∞—á–∞–ª–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é - —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ—Å–ª–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é.
    """

    main_category = State()
    sab_category = State()
    # SetCategory.main_category  SetCategory.sab_category

    # sab_category_problem_analytics = State()
    # main_category_problem_formats = State()
    # main_category_problem_trade_turnover = State()


# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------- 0. –ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ.
# @retail_router.callback_query(callback.data == 'next')   # –ü–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...
# async def hello_after_on_next(callback: types.CallbackQuery): # todo –ø–æ—Ç–æ–º –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –Ω–∞ –∫–µ–ª–±–µ–∫ –∫–≤–µ—Ä–∏
@retail_router.message(StateFilter(None), F.text == 'next')  # todo –ø–æ—Ç–æ–º –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –Ω–∞ –∫–µ–ª–±–µ–∫ –∫–≤–µ—Ä–∏
async def hello_after_on_next(message: types.Message, state: FSMContext):
    user = message.from_user.first_name  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer((hello_users_retail.format(user)),
                         parse_mode='HTML')

    await asyncio.sleep(1)
    await message.answer(f'–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —è –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ —Å–æ –º–Ω–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å, '
                         f'–∞ –ø–æ—Å–ª–µ —É–∂–µ –ø–æ–º–æ–≥—É –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ç–≤–æ–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω—É –∏–ª–∏ '
                         f'–º–æ–∂–µ—à—å –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!',
                         parse_mode='HTML',
                         reply_markup=get_callback_btns(
                             btns={'‚ñ∂Ô∏è –ö–†–ê–¢–ö–ò–ô –ò–ù–°–¢–†–£–ö–¢–ê–ñ': 'instruction',
                                   '‚è© –ü–†–ò–°–¢–£–ü–ò–¢–¨ –ö –†–ê–ë–û–¢–ï': 'go_work'
                                   },
                             sizes=(1, 1)
                         ))
    # –í—Å—Ç–∞–µ—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    await state.set_state(Instructor.instruct_or_gowork)


# –§–∏–ª—å—Ç—Ä—É–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è 2-—Ö –∫–Ω–æ–ø–æ–∫ (–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—à–µ—Ç –ª–µ–≤–æ–µ –≤ —á–∞—Ç, —Ç–æ —É–¥–∞–ª–∏–º)
@retail_router.message(StateFilter(Instructor.instruct_or_gowork))
async def filter_unresolved_ext(message: types.Message, state: FSMContext):
    # —É–¥–∞–ª–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ (–±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
    # if not message.text in {'–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É', '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É',
    #                          '–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É', '–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏', '–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º'}:
    await message.delete()


# ----------------------------- –ö–æ–Ω–µ—Ü 0.

# ----------------------------- 0.1. –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É "–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂" - –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É:
@retail_router.callback_query(StateFilter(Instructor.instruct_or_gowork), F.data.startswith('instruction'))
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (StateFilter(None) + –æ–Ω –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É "instruction")
async def get_instruction(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()  # –î–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–≤–µ—Ç –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ (–∫–Ω–æ–ø–∫–∞ –Ω–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–ª–∏–≤–∞—Ç—å—Å—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏).

    await callback.message.edit_text(
        f'–Ø –≤–∫–ª—é—á–∏–ª —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–µ –º–µ–Ω—é.\n'
        f'–° –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º.'
        f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –û–ê–∏–¢ –∑–∞ –ø–æ–º–æ—â—å—é –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º '
        f'–∏ –ø—Ä–æ—á–∏—Ö —Ä–∞–±–æ—á–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é:\n'
        f'<b> * –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É *</b>.'
        f'–î–∞–ª–µ–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞—Ç—å: <b> * –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞—è–≤–∫–∏ *</b> \n'
        f', —á—Ç–æ–±—ã —è —Ç–æ—á–Ω–æ –ø–æ–Ω—è–ª, –∫–æ–º—É –∏–∑ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–≤–æ—é <b>–±–æ–ª—å</b>,\n'
        f'–í –¥–∞–ª—å–Ω–µ–π—à–µ–º, —è –≤—Å–µ–≥–¥–∞ –±—É–¥—É –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ —Ö–æ–¥—É —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, —Ç–∞–∫ —á—Ç–æ –Ω–µ –∑–∞–ø—É—Ç–∞–µ—à—å—Å—è!\n'
        f'–ù–æ –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ —Ç–æ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å–æ –º–Ω–æ–π, '
        f'–≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å" –∏–ª–∏ –≤ "–ú–µ–Ω—é", '
        f'–¥–∞–ª–µ–µ –∫–æ–º–∞–Ω–¥—É <i>help</i>\n'
        f'–ù–∞–¥–µ—é—Å—å, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –∏ –º–æ–∂–µ–º –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–±–æ—Ç–µ!',
        reply_markup=get_callback_btns(
            btns={'–°–û–ó–î–ê–¢–¨ –ó–ê–Ø–í–ö–£': 'go_create_request',
                  '–ü–ï–†–ï–ô–¢–ò –í –ß–ê–¢': 'go_chat_user',
                  '–ò–ó–ú–ï–ù–ò–¢–¨ –ó–ê–Ø–í–ö–£': 'go_chenge_request',
                  '–£–î–ê–õ–ò–¢–¨ –ó–ê–Ø–í–ö–£': 'go_delete_request',
                  '–ó–ê–ü–†–û–°–ò–¢–¨ –°–¢–ê–¢–£–° –ó–ê–Ø–í–ö–ò': 'go_status_request'
                  },
            sizes=(2, 2, 1)))

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    await state.clear()


# 0.2. –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É "–ü–†–ò–°–¢–£–ü–ò–¢–¨ –ö –†–ê–ë–û–¢–ï" - –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É:
@retail_router.callback_query(StateFilter(Instructor.instruct_or_gowork), F.data.startswith('go_work'))
async def get_instruction(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()  # –î–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–≤–µ—Ç –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ (–∫–Ω–æ–ø–∫–∞ –Ω–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–ª–∏–≤–∞—Ç—å—Å—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏).
    await callback.message.edit_text(f'–í–æ—Ç —Ç–µ–±–µ —Ä–∞–±–æ—á–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç üëá, –¥—É–º–∞—é —Ä–∞–∑–±–µ—Ä–µ—à—å—Å—è üòâ.',
                                     reply_markup=get_callback_btns(
                                         btns={'–°–û–ó–î–ê–¢–¨ –ó–ê–Ø–í–ö–£': 'go_create_request',
                                               '–ü–ï–†–ï–ô–¢–ò –í –ß–ê–¢': 'go_chat_user',
                                               '–ò–ó–ú–ï–ù–ò–¢–¨ –ó–ê–Ø–í–ö–£': 'go_chenge_request',
                                               '–£–î–ê–õ–ò–¢–¨ –ó–ê–Ø–í–ö–£': 'go_delete_request',
                                               '–ó–ê–ü–†–û–°–ò–¢–¨ –°–¢–ê–¢–£–° –ó–ê–Ø–í–ö–ò': 'go_status_request'
                                               },
                                         sizes=(2, 2, 1)))
    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    await state.clear()
    # await asyncio.sleep(5)
    # await callback.message.delete() - —É–¥–∞–ª–∏—Ç –∫–Ω–æ–ø–∫–∏


# ----------------------------- –ö–æ–Ω–µ—Ü 0.1/2

#
#

# ----------------------------- 1.0. –†–∞–±–æ—Ç–∞ —Å –Ω–∏–∂–Ω–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –º–µ–Ω—é.
# -------------- 1.1. –í–µ—Ç–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏:
@retail_router.callback_query(StateFilter(None),
                              F.data.startswith('go_create_request'))  # (StateFilter(None), F.text == '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
async def get_request_problem(callback: types.CallbackQuery, state: FSMContext):
    # –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é –Ω–∞ –Ω–æ–≤–æ–µ
    # ---------------------------------------- –ò–Ω–ª–∞–π–Ω–æ–≤–æ–µ –º–µ–Ω—é (—É—Ä–æ–≤–µ–Ω—å 0):
    btn_main_retail_inline = get_callback_btns(
        btns={'üìà –ê–ù–ê–õ–ò–¢–ò–ö–ê': 'problem_analytics',
              'üè¨ –§–û–†–ú–ê–¢–´': 'problem_formats',
              'üõû –¢–û–í–ê–†–û–û–ë–û–†–û–¢': 'problem_trade_turnover',
              '‚èπ –û–¢–ú–ï–ù–ê': 'problem_cancel'},
        sizes=(1, 1, 1, 1)
    )

    # –í—ã–≤–æ–¥ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–≥–æ –º–µ–Ω—é (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π), —Ä–µ–∞–∫—Ü–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏
    await callback.message.edit_text(
        f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è üö®', parse_mode='HTML', reply_markup=btn_main_retail_inline)
    # –í—Å—Ç–∞–µ—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    await state.set_state(SetCategory.main_category)
    #  CetCategory.sab_category


#
#
#

# # # # 1.1.0 –†–æ–¥–∏—Ç–µ–ª—å (–í–µ—Ç–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏) -> –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–≥–æ –º–µ–Ω—é –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π:
# ----------------------- callback –Ω–∞ cancel
@retail_router.callback_query(
    StateFilter(SetCategory.main_category, SetCategory.sab_category,
                AddRequests.request_message), F.data.startswith('problem_cancel'))
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (StateFilter(None) + –æ–Ω –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É "cancel")
async def get_cancel(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    # await callback.message.delete()  # —É–¥–∞–ª–∏—Ç –∫–Ω–æ–ø–∫–∏

    await callback.message.edit_text(f'–¢–µ—Ä–º–∏–Ω–∞–ª:',
                                     reply_markup=get_callback_btns(
                                         btns={'–°–û–ó–î–ê–¢–¨ –ó–ê–Ø–í–ö–£': 'go_create_request',
                                               '–ü–ï–†–ï–ô–¢–ò –í –ß–ê–¢': 'go_chat_user',
                                               '–ò–ó–ú–ï–ù–ò–¢–¨ –ó–ê–Ø–í–ö–£': 'go_chenge_request',
                                               '–£–î–ê–õ–ò–¢–¨ –ó–ê–Ø–í–ö–£': 'go_delete_request',
                                               '–ó–ê–ü–†–û–°–ò–¢–¨ –°–¢–ê–¢–£–° –ó–ê–Ø–í–ö–ò': 'go_status_request'
                                               },
                                         sizes=(2, 2, 1)))

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    await state.clear()


# ----------------------- callback –Ω–∞ –ê–ù–ê–õ–ò–¢–ò–ö–ê
@retail_router.callback_query(StateFilter(SetCategory.main_category), F.data.startswith('problem_analytics'))
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (StateFilter(None) + –æ–Ω –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É "analytics")
async def get_problem_analytics_state(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()

    btn_problem_analytics = get_callback_btns(
        btns={'üìä –î–ê–®–ë–û–†–î–´': 'problem_dashboards',
              'üîñ –¶–ï–ù–ù–ò–ö–ò': 'problem_tags',
              'ü§ñ TELEGRAM-–ë–û–¢–´': 'problem_bot',
              '‚¨ÖÔ∏è –ù–ê–ó–ê–î': 'problem_inline_back',
              '‚èπ –û–¢–ú–ï–ù–ê': 'problem_cancel'},
        sizes=(1, 1, 1, 2))

    await callback.message.edit_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –ê–ù–ê–õ–ò–¢–ò–ö–ê:',
                                     parse_mode='HTML',
                                     reply_markup=btn_problem_analytics)
    await state.clear()
    # –í—Å—Ç–∞–µ—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:
    await state.set_state(SetCategory.sab_category)


# ----------------------- callback –Ω–∞ –§–û–†–ú–ê–¢–´
@retail_router.callback_query(StateFilter(SetCategory.main_category), F.data.startswith('problem_formats'))
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (StateFilter(None) + –æ–Ω –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É "analytics")
async def get_problem_formats_state(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()

    btn_problem_formats = get_callback_btns(btns={'–ê–† (–í–ï–ó–ï–¢ –¢–û–í–ê–†)': 'problem_coming',
                                                  '–ê–† (–ù–ï –í–ï–ó–ï–¢ –¢–û–í–ê–†) ': 'problem_no_coming',
                                                  '–°–ï': 'problem_ce',
                                                  '–ì–†–ê–ù–ò–¶–´ –ö–ê–¢–ï–ì–û–†–ò–ô': 'problem_borders',
                                                  '–õ–ï–ñ–ê–ö–ò': 'problem_unsold',
                                                  '‚¨ÖÔ∏è –ù–ê–ó–ê–î': 'problem_inline_back',
                                                  '‚èπ –û–¢–ú–ï–ù–ê': 'problem_cancel'},
                                            sizes=(1, 1, 1, 1, 1, 2))

    await callback.message.edit_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –§–û–†–ú–ê–¢–´:',
                                     parse_mode='HTML',
                                     reply_markup=btn_problem_formats)
    await state.clear()
    # –í—Å—Ç–∞–µ—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:
    await state.set_state(SetCategory.sab_category)


# ----------------------- callback –Ω–∞ –¢–û–í–ê–†–û–û–ë–û–†–û–¢
@retail_router.callback_query(StateFilter(SetCategory.main_category), F.data.startswith('problem_trade_turnover'))
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (StateFilter(None) + –æ–Ω –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É "analytics")
async def get_problem_trade_turnover_state(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()

    btn_problem_trade_turnover = get_callback_btns(
        btns={'–ú–ü': 'problem_sales',
              '–ú–ï–†–ß–ò': 'problem_merch',
              '–¶–ï–ù–ê –ù–ê –¢–û–í–ê–†': 'problem_price',
              '–ó–ê–ö–£–ü–ö–ê –¢–û–í–ê–†–ê': 'problem_purchase',
              '–í–ï': 'problem_ve',
              '–°–¢–ú': 'problem_stm',
              '–£–¶–ï–ù–ö–ê': 'problem_discount',
              '‚¨ÖÔ∏è –ù–ê–ó–ê–î': 'problem_inline_back',
              '‚èπ –û–¢–ú–ï–ù–ê': 'problem_cancel'},
        sizes=(1, 1, 1, 1, 1, 1, 1, 2))

    await callback.message.edit_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –¢–û–í–ê–†–û–û–ë–û–†–û–¢:',
                                     parse_mode='HTML',
                                     reply_markup=btn_problem_trade_turnover)
    await state.clear()
    # –í—Å—Ç–∞–µ—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:
    await state.set_state(SetCategory.sab_category)


# ----------------------- callback –Ω–∞ problem_inline_back
@retail_router.callback_query(
    StateFilter(SetCategory.sab_category, AddRequests.request_message), F.data.startswith('problem_inline_back'))
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (StateFilter(None) + –æ–Ω –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É "cancel")
async def get_problem_inline_back_state(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è üö®',
                                     parse_mode='HTML',
                                     reply_markup=get_callback_btns(
                                         btns={'üìà –ê–ù–ê–õ–ò–¢–ò–ö–ê': 'problem_analytics',
                                               'üè¨ –§–û–†–ú–ê–¢–´': 'problem_formats',
                                               'üõû –¢–û–í–ê–†–û–û–ë–û–†–û–¢': 'problem_trade_turnover',
                                               '‚èπ –û–¢–ú–ï–ù–ê': 'problem_cancel'},
                                         sizes=(1, 1, 1, 1)))
    await state.clear()
    # –í—Å—Ç–∞–µ—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:
    await state.set_state(SetCategory.main_category)


# ----------------------- callback –Ω–∞ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
@retail_router.callback_query(
    StateFilter(SetCategory.sab_category),
    F.data.startswith('problem_') & (~F.data.startswith('problem_cancel') | ~F.data.startswith('problem_inline_back')))
async def get_problem_trade_turnover_state(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()

    # –£–∑–Ω–∞–µ–º –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞:
    selected_subcategory = callback.data
    # print(selected_subcategory)

    generator_category_data(selected_subcategory)

    # –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ:
    # get_category_data = await state.get_data()

    # print(f'get_category_data = {get_category_data}')

    # –ó–∞–º–µ–Ω—è–µ–º –∫–ª–∞–≤—É:
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è', reply_markup=get_callback_btns(
        btns={'‚¨ÖÔ∏è –ù–ê–ó–ê–î': 'problem_inline_back',
              '‚èπ –û–¢–ú–ï–ù–ê': 'problem_cancel'},
        sizes=(2,)))

    # # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤—É:
    # await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è', reply_markup=types.ReplyKeyboardRemove())

    await state.clear()
    # await callback.message.delete()  # —É–¥–∞–ª–∏—Ç –∫–Ω–æ–ø–∫–∏
    await state.set_state(AddRequests.request_message)

    await state.update_data(write_to_base)


# ----------------------- callback –Ω–∞ –≤–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è:
# –°—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ç–µ–∫—Å—Ç
@retail_router.message(StateFilter(AddRequests.request_message), F.text)
# –ï—Å–ª–∏ –≤–≤–µ–ª —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è (AddRequests.request_message, F.text):
async def get_request_message(message: types.Message, state: FSMContext, session: AsyncSession):
    # –ü–µ—Ä–µ–¥–∞–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ (–∫–ª—é—á = request_message, –∫ –Ω–µ–º—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ message.text), –ø–æ—Å–ª–µ –∞–ø–¥–µ–π—Ç–∏–º
    await state.update_data(request_message=message.text)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
    data = await state.get_data()
    # tg_id = message.from_user.id

    # –ó–∞–ø—Ä–æ—Å –≤ –ë–î –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è:
    await add_request_message(message, session, data)

    # ------------------------------------- SQL

    await message.answer(f'–û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!')

    await asyncio.sleep(1)
    await message.answer(f'–Ø –Ω–∞–ø—Ä–∞–≤–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤–∑—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É.')

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:
    await message.answer(f'–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ: {data.get("request_message")}')

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    await state.clear()


# -------------- 1.2. –í–µ—Ç–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏:
# back_step
# @retail_router.message(StateFilter(AddRequests.request_message), F.text == '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É')
# async def get_back_request(message: types.Message):
#     await state.clear()
#     await message.delete()
#     # –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é –Ω–∞ –Ω–æ–≤–æ–µ
#     await message.answer(f'–û–∫!', reply_markup=RETAIL_KEYB_MAIN)
# '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É',
# '–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏',

# -------------- 1.3. –í–µ—Ç–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–∏–∏ –∑–∞—è–≤–∫–∏:
@retail_router.message(StateFilter(None), F.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É')
async def get_change_request(message: types.Message):
    await message.delete()
    #
    await message.answer(f'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! \n'
                         f'–ß—Ç–æ –±—É–¥–µ—Ç? –ó–∞–ø—Ä–æ—Å –≤ –ª–æ–∫–∞–ª –±–¥ - –Ω–∞–π—Ç–∏ –∑–∞—è–∫–∏ –ø–æ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                         f'–í—ã–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏ —Ç–¥. -> (–ø—Ä–æ–¥—É–º–∞—Ç—å –ª–æ–≥–∏–∫—É) ')


# -------------- 1.4. –í–µ—Ç–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:
@retail_router.message(StateFilter(None), F.text == '–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É')
async def get_change_request(message: types.Message):
    await message.delete()
    #
    await message.answer(f'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! \n'
                         f'–ß—Ç–æ –±—É–¥–µ—Ç? –ó–∞–ø—Ä–æ—Å –≤ –ª–æ–∫–∞–ª –±–¥ - –Ω–∞–π—Ç–∏ –∑–∞—è–∫–∏ –ø–æ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                         f'–í—ã–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏ —Ç–¥. -> (–ø—Ä–æ–¥—É–º–∞—Ç—å –ª–æ–≥–∏–∫—É) ')


# -------------- 1.5. –í–µ—Ç–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:
@retail_router.message(StateFilter(None), F.text == '–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏')
async def get_status_request(message: types.Message):
    await message.delete()
    #
    await message.answer(f'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! \n'
                         f'–ß—Ç–æ –±—É–¥–µ—Ç? –ó–∞–ø—Ä–æ—Å –≤ –ª–æ–∫–∞–ª –±–¥ - –Ω–∞–π—Ç–∏ –∑–∞—è–∫–∏ –ø–æ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                         f'–í—ã–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏ —Ç–¥. -> (–ø—Ä–æ–¥—É–º–∞—Ç—å –ª–æ–≥–∏–∫—É) ')


# -------------- 1.6. –í–µ—Ç–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:
@retail_router.message(StateFilter(None), F.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º')
async def get_chat_with_worker(message: types.Message):
    await message.delete()
    #
    await message.answer(f'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! \n'
                         f'–ß—Ç–æ –±—É–¥–µ—Ç? –ó–∞–ø—Ä–æ—Å –≤ –ª–æ–∫–∞–ª –±–¥ - –Ω–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–∫–∏ –ø–æ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                         f'–í—ã–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏ —Ç–¥. -> (–ø—Ä–æ–¥—É–º–∞—Ç—å –ª–æ–≥–∏–∫—É) ')
    await message.answer(category_problem, parse_mode='HTML')  # !!

# ----------------------------- –ö–æ–Ω–µ—Ü 1.0. –†–∞–±–æ—Ç–∞ —Å –Ω–∏–∂–Ω–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –º–µ–Ω—é.


# ----------------------------------------------------------------------------------------------------------------------
# @retail_router.message(F.text == '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
# async def get_info_category(message: types.Message):
#     await message.delete()
#
#     await message.answer(category_problem, parse_mode='HTML')

# ---------------------------- –ù–∏–∂–Ω—è—è —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–Ω–æ–ø–∫–µ "–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É" –∫–æ–Ω–µ—Ü:


# await message.answer(f'–í–≤–µ–¥–∏—Ç–µ —Å—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è', reply_markup=REQUEST_PROBLEM)

# , reply_markup=types.ReplyKeyboardRemove() - —É–¥–∞–ª—è–µ—Ç –∫–ª–∞–≤—É # –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é

# f'–ê –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç–µ–±–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è '
#     await asyncio.sleep(1)

# todo –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç.

# –¢–∞–∫–æ–µ –∂–µ –º–µ–Ω—é –º–µ–Ω—é –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
# @retail_router.message(CommandStart())
# async def start_cmd(message: types.Message):
#     user = message.from_user.first_name  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#
#     # –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞, –∑–∞—á–µ–º –Ω—É–∂–µ–Ω:
#     await message.answer((hello_users_retail.format(user)), parse_mode='HTML')   # .as_html()
#
#
#     await asyncio.sleep(1)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.

# #
# await message.answer(f'–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å! üíÜ‚Äç‚ôÇÔ∏è',
#                      reply_markup=keyboard_menu.menu_kb)

# await asyncio.sleep(1)

# –∑–¥–µ—Å—å –≤—ã–∑–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ: —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É. +
# –ò–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞:
# await message.answer(f'–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ ‚úçÔ∏è ?',
#                      reply_markup=inline_menu.get_callback_btns(btns={
#                          '–°–æ–∑–¥–∞—Ç—å': 'new',
#                          '–ü–æ–∑–∂–µ': 'none'
#                      }))  # create
#                     # —Å–¥–µ–ª–∞—Ç—å –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞ –∫–Ω–æ–ø–∫–∏#

# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞: (or_f(Command("menu"), (F.text.lower() == "–º–µ–Ω—é")))
# @retail_router.callback_query(F.data.startswith('new'))
# async def callback_new(callback: types.CallbackQuery): # –¥–ª—è –±–¥ -   , session: AsyncSession
#     # product_id = callback.data.split("_")[-1]
#     # await orm_delete_product(session, int(product_id))
#
#     #  0. –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è +
#     await callback.answer()  # –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–≤–µ—Ç
#     await callback.message.answer(category_problem, parse_mode='HTML') #.as_html() - –ø–æ—Ö–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å f —Å—Ç—Ä–æ–∫–æ–π

# @retail_router.message(CommandStart())
# async def start_cmd(message: types.Message):
#     await message.answer("–ü—Ä–∏–≤–µ—Ç, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫")

# , parse_mode='HTML', reply_markup=inline_menu.get_callback_btns(btns={async def add_product(message: types.Message):
#                                      '–ü—Ä–æ–π—Ç–∏ –∞—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é': 'get_type_users'}))   # , parse_mode='HTML'    await message.answer("–ü—Ä–∏–≤–µ—Ç —Ä–æ–∑–Ω–∏—Ü–∞! –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", reply_markup=RETAIL_KEYB)

#
# f'\u00A0\u00A0üíÜ‚Äç‚ôÇÔ∏è\u00A0\u00A0–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å!\n'
#                          f'\n'
#                          f'–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è, —á—Ç–æ–±—ã —è —Ç–æ—á–Ω–æ –ø–æ–Ω—è–ª,'
#                          f' –∫–æ–º—É –∏–∑ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–≤–æ—é –±–æ–ª—å, –∞ –¥–∞–ª—å—à–µ —è —É–∂–µ –ø–æ–¥—Å–∫–∞–∂—É.\n'
#                          f'\n'

# f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã <b>—Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É</b> \n'
#                          f'<i>(–æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –û–ê–∏–¢ –∑–∞ –ø–æ–º–æ—â—å—é –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –∏ –ø—Ä–æ—á–∏—Ö —Ä–∞–±–æ—á–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤)</i>'
#                          f', –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å <b>–∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è</b>,'
#                          f' —á—Ç–æ–±—ã —è —Ç–æ—á–Ω–æ –ø–æ–Ω—è–ª, –∫–æ–º—É –∏–∑ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–≤–æ—é <b>–±–æ–ª—å</b>,'
#                          f' –∞ –¥–∞–ª—å—à–µ –∏ —Ç–∞–∫ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ. \n'
#                          f'–ö —Ç–æ–º—É –∂–µ —è –≤—Å–µ–≥–¥–∞ –±—É–¥—É –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ —Ö–æ–¥—É —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π.')


#     data_main_category = callback_query.data
#     if data == 'problem_analytics':
#         await bot.send_message(callback_query.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç:', reply_markup=analytics_menu_keyboard())
#         await state.set_state(CetCategory.analytics)
#     elif data == 'problem_formats':

# # await asyncio.sleep(1)
#     # await callback.message.answer(f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –û–ê–∏–¢ –∑–∞ –ø–æ–º–æ—â—å—é –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º '
#     #                               f'–∏ –ø—Ä–æ—á–∏—Ö —Ä–∞–±–æ—á–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é:\n'
#     #                               f'<b> * –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É *</b>.',
#     #                               reply_markup=RETAIL_KEYB_MAIN)
#     #
#     # await asyncio.sleep(2)
#     # await callback.message.answer(f'–î–∞–ª–µ–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞—Ç—å: <b> * –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞—è–≤–∫–∏ *</b> \n'
#     #                               f', —á—Ç–æ–±—ã —è —Ç–æ—á–Ω–æ –ø–æ–Ω—è–ª, –∫–æ–º—É –∏–∑ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–≤–æ—é <b>–±–æ–ª—å</b>,\n')
#     #
#     # await asyncio.sleep(2)
#     # await callback.message.answer(
#     #     f'–í –¥–∞–ª—å–Ω–µ–π—à–µ–º, —è –≤—Å–µ–≥–¥–∞ –±—É–¥—É –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ —Ö–æ–¥—É —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, —Ç–∞–∫ —á—Ç–æ –Ω–µ –∑–∞–ø—É—Ç–∞–µ—à—å—Å—è!')
#     #
#     # await asyncio.sleep(1)
#     # await callback.message.answer(f'–ù–æ –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ —Ç–æ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å–æ –º–Ω–æ–π, '
#     #                               f'–≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–ú–µ–Ω—é", '
#     #                               f'–¥–∞–ª–µ–µ –∫–æ–º–∞–Ω–¥—É <i>help</i>')
#     #
#     # await asyncio.sleep(2)
#     # await callback.message.answer(f'–ù–∞–¥–µ—é—Å—å, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –∏ –º–æ–∂–µ–º –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–±–æ—Ç–µ!')
#     #
#     # await asyncio.sleep(3)
#     # await callback.message.answer(f'–ï—Å–ª–∏ —á—Ç–æ, - —è –≥–æ—Ç–æ–≤! –ñ–∞–ª—É–π—Å—è ‚úçÔ∏è !')


# # –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –≤–Ω–∏–∑—É (–ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç)
# RETAIL_KEYB_MAIN = get_keyboard(
#     '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É',
#     '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É',
#     '–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É',
#     '–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏',
#     '–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º',
#     placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
#     sizes=(2, 1, 1)  # –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É, –ø–æ –ø–æ—Ä—è–¥–∫—É 1–π —Ä—è–¥ –∏ —Ç–¥.
# )
#
# REQUEST_PROBLEM = get_keyboard(
#     # '–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
#     '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É',
#     '–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏',
#     placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
#     sizes=(2,)  # –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É, –ø–æ –ø–æ—Ä—è–¥–∫—É 1–π —Ä—è–¥ –∏ —Ç–¥. 2, 1
# )
